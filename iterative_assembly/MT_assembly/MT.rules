OUT_DIR, OUT_LOG = prepare_environment('MT_output')

### First assembly ###
rule ASSEMBLY_1:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/ASSEMBLY_1.json" % OUT_DIR
    input:
        'data/MT.R1.preprocessed.fq',
        'data/MT.R2.preprocessed.fq',
        'data/MT.SE.preprocessed.fq'
    output:
        '%s/MT.assembly_1.fa' % OUT_DIR
    shell:
        """
        TMPD=$(mktemp -d -t --tmpdir={TMPDIR} "XXXXXX") 
        
        MAX_MEM="$(({MEMTOTAL} * 1000000000))"

        megahit -1 {input[0]} \
        -2 {input[1]} \
        -r {input[2]} \
        -o $TMPD \
        --k-min {config[idba_ud][mink]} \
        --k-max {config[idba_ud][maxk]} \
        --k-step {config[idba_ud][step]} \
        --no-bubble \
        -t {THREADS} --cpu-only \
        -m ${{MAX_MEM}} \
        --mem-flag 1 >> {log} 2>&1
        cp $TMPD/final.contigs.fa MT_contigs_1.fa
        """

rule EXTRACT_UNMAPPED_1:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/EXTRACT_UNMAPPED_1.json" % OUT_DIR
    input:
        'data/MT.R1.preprocessed.fq',
        'data/MT.R2.preprocessed.fq',
        'data/MT.SE.preprocessed.fq',
        '%s/MT.assembly_1.fa' % OUT_DIR
    output:
        '%s/MT.R1.unmapped_1.fq' % OUT_DIR,
        '%s/MT.R2.unmapped_1.fq' % OUT_DIR,
        '%s/MT.SE.unmapped_1.fq' % OUT_DIR
    shell:
        """
        TMP_FILE=$(mktemp --tmpdir={TMPDIR} -t "alignment_XXXXXX.bam")
        BUFFER=$(mktemp --tmpdir={TMPDIR} -t "alignment_buffer_XXXXXX.bam")
        bwa mem -v 1 -t {THREADS} {input[3]} {input[0]} {input[1]} | samtools view -@ {THREADS} -bS - > $TMP_FILE
        samtools merge -@ {THREADS} -u - \
        <(samtools view -@ {THREADS} -u  -f 4 -F 264 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 8 -F 260 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 12 -F 256 $TMP_FILE) | \
        samtools view -@ {THREADS} -bF 0x800 -  | samtools sort -o -@ {THREADS} -m {MEMCORE}G -n - $BUFFER | \
        bamToFastq -i stdin -fq {output[0]} -fq2 {output[1]}
        bwa mem -v 1 -t {THREADS} {input[3]} {input[2]} | \
        samtools view -@ {THREADS} -bS - | samtools view -@ {THREADS} -uf 4 - | \
        bamToFastq -i stdin -fq {output[2]}
        rm -rf $BUFFER* $TMP_FILE
        """

### Second assembly ###

rule ASSEMBLY_2:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/ASSEMBLY_2.json" % OUT_DIR
    input:
        '%s/MT.R1.unmapped_1.fq' % OUT_DIR,
        '%s/MT.R2.unmapped_1.fq' % OUT_DIR,
        '%s/MT.SE.unmapped_1.fq' % OUT_DIR
    output:
        '%s/MT.assembly_2.fa' % OUT_DIR
    shell:
        """
        TMPD=$(mktemp -d -t --tmpdir={TMPDIR} "XXXXXX") 
        
        MAX_MEM="$(({MEMTOTAL} * 1000000000))"

        megahit -1 {input[0]} \
        -2 {input[1]} \
        -r {input[2]} \
        -o $TMPD \
        --k-min {config[idba_ud][mink]} \
        --k-max {config[idba_ud][maxk]} \
        --k-step {config[idba_ud][step]} \
        --no-bubble \
        -t {THREADS} --cpu-only \
        -m ${{MAX_MEM}} \
        --mem-flag 1 >> {log} 2>&1
        cp $TMPD/final.contigs.fa MT_contigs_1.fa
        """

rule CONCATENATE_1_2:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/CONCATENATE_1_2.json" % OUT_DIR
    input:
        '%s/MT.assembly_1.fa' % OUT_DIR,
        '%s/MT.assembly_2.fa' % OUT_DIR
    output:
        '%s/MT.assembly_cat_1_2.fa' % OUT_DIR
    shell:
        """
        cat {input} > {output}
        """

rule EXTRACT_UNMAPPED_1_2:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/EXTRACT_UNMAPPED_1_2.json" % OUT_DIR
    input:
        'data/MT.R1.preprocessed.fq',
        'data/MT.R2.preprocessed.fq',
        'data/MT.SE.preprocessed.fq',
        '%s/MT.assembly_cat_1_2.fa' % OUT_DIR
    output:
        '%s/MT.R1.unmapped_1_2.fq' % OUT_DIR,
        '%s/MT.R2.unmapped_1_2.fq' % OUT_DIR,
        '%s/MT.SE.unmapped_1_2.fq' % OUT_DIR
    shell:
        """
        TMP_FILE=$(mktemp --tmpdir={TMPDIR} -t "alignment_XXXXXX.bam")
        BUFFER=$(mktemp --tmpdir={TMPDIR} -t "alignment_buffer_XXXXXX.bam")
        bwa mem -v 1 -t {THREADS} {input[3]} {input[0]} {input[1]} | samtools view -@ {THREADS} -bS - > $TMP_FILE
        samtools merge -@ {THREADS} -u - \
        <(samtools view -@ {THREADS} -u  -f 4 -F 264 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 8 -F 260 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 12 -F 256 $TMP_FILE) | \
        samtools view -@ {THREADS} -bF 0x800 -  | samtools sort -o -@ {THREADS} -m {MEMCORE}G -n - $BUFFER | \
        bamToFastq -i stdin -fq {output[0]} -fq2 {output[1]}
        bwa mem -v 1 -t {THREADS} {input[3]} {input[2]} | \
        samtools view -@ {THREADS} -bS - | samtools view -@ {THREADS} -uf 4 - | \
        bamToFastq -i stdin -fq {output[2]}
        rm -rf $BUFFER* $TMP_FILE
        """

### Third assembly ###

rule ASSEMBLY_3:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/ASSEMBLY_3.json" % OUT_DIR
    input:
        '%s/MT.R1.unmapped_1_2.fq' % OUT_DIR,
        '%s/MT.R2.unmapped_1_2.fq' % OUT_DIR,
        '%s/MT.SE.unmapped_1_2.fq' % OUT_DIR
    output:
        '%s/MT.assembly_3.fa' % OUT_DIR
    shell:
        """
        TMPD=$(mktemp -d -t --tmpdir={TMPDIR} "XXXXXX") 
        
        MAX_MEM="$(({MEMTOTAL} * 1000000000))"

        megahit -1 {input[0]} \
        -2 {input[1]} \
        -r {input[2]} \
        -o $TMPD \
        --k-min {config[idba_ud][mink]} \
        --k-max {config[idba_ud][maxk]} \
        --k-step {config[idba_ud][step]} \
        --no-bubble \
        -t {THREADS} --cpu-only \
        -m ${{MAX_MEM}} \
        --mem-flag 1 >> {log} 2>&1
        cp $TMPD/final.contigs.fa MT_contigs_1.fa
        """

rule CONCATENATE_1_2_3:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/CONCATENATE_1_2_3.json" % OUT_DIR
    input:
        '%s/MT.assembly_cat_1_2.fa' % OUT_DIR,
        '%s/MT.assembly_3.fa' % OUT_DIR
    output:
        '%s/MT.assembly_cat_1_2_3.fa' % OUT_DIR
    shell:
        """
        cat {input} > {output}
        """

rule EXTRACT_UNMAPPED_1_2_3:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/EXTRACT_UNMAPPED_1_2_3.json" % OUT_DIR
    input:
        'data/MT.R1.preprocessed.fq',
        'data/MT.R2.preprocessed.fq',
        'data/MT.SE.preprocessed.fq',
        '%s/MT.assembly_cat_1_2_3.fa' % OUT_DIR
    output:
        '%s/MT.R1.unmapped_1_2_3.fq' % OUT_DIR,
        '%s/MT.R2.unmapped_1_2_3.fq' % OUT_DIR,
        '%s/MT.SE.unmapped_1_2_3.fq' % OUT_DIR
    shell:
        """
        TMP_FILE=$(mktemp --tmpdir={TMPDIR} -t "alignment_XXXXXX.bam")
        BUFFER=$(mktemp --tmpdir={TMPDIR} -t "alignment_buffer_XXXXXX.bam")
        bwa mem -v 1 -t {THREADS} {input[3]} {input[0]} {input[1]} | samtools view -@ {THREADS} -bS - > $TMP_FILE
        samtools merge -@ {THREADS} -u - \
        <(samtools view -@ {THREADS} -u  -f 4 -F 264 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 8 -F 260 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 12 -F 256 $TMP_FILE) | \
        samtools view -@ {THREADS} -bF 0x800 -  | samtools sort -o -@ {THREADS} -m {MEMCORE}G -n - $BUFFER | \
        bamToFastq -i stdin -fq {output[0]} -fq2 {output[1]}
        bwa mem -v 1 -t {THREADS} {input[3]} {input[2]} | \
        samtools view -@ {THREADS} -bS - | samtools view -@ {THREADS} -uf 4 - | \
        bamToFastq -i stdin -fq {output[2]}
        rm -rf $BUFFER* $TMP_FILE
        """

### Fourth assembly ###
rule ASSEMBLY_4:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/ASSEMBLY_4.json" % OUT_DIR
    input:
        '%s/MT.R1.unmapped_1_2_3.fq' % OUT_DIR,
        '%s/MT.R2.unmapped_1_2_3.fq' % OUT_DIR,
        '%s/MT.SE.unmapped_1_2_3.fq' % OUT_DIR
    output:
        '%s/MT.assembly_4.fa' % OUT_DIR
    shell:
        """
        TMPD=$(mktemp -d -t --tmpdir={TMPDIR} "XXXXXX") 
        
        MAX_MEM="$(({MEMTOTAL} * 1000000000))"

        megahit -1 {input[0]} \
        -2 {input[1]} \
        -r {input[2]} \
        -o $TMPD \
        --k-min {config[idba_ud][mink]} \
        --k-max {config[idba_ud][maxk]} \
        --k-step {config[idba_ud][step]} \
        --no-bubble \
        -t {THREADS} --cpu-only \
        -m ${{MAX_MEM}} \
        --mem-flag 1 >> {log} 2>&1
        cp $TMPD/final.contigs.fa MT_contigs_1.fa
        """

rule CONCATENATE_1_2_3_4:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/CONCATENATE_1_2_3_4.json" % OUT_DIR
    input:
        '%s/MT.assembly_cat_1_2_3.fa',
        '%s/MT.assembly_4.fa'
    output:
        '%s/MT.assembly_cat_1_2_3_4.fa'
    shell:
        """
        cat {input} > {output}
        """

rule EXTRACT_UNMAPPED_1_2_3_4:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/EXTRACT_UNMAPPED_1_2_3_4.json" % OUT_DIR
    input:
        'data/MT.R1.preprocessed.fq',
        'data/MT.R2.preprocessed.fq',
        'data/MT.SE.preprocessed.fq',
        '%s/MT.assembly_cat_1_2_3_4.fa' % OUT_DIR
    output:
        '%s/MT.R1.unmapped_1_2_3_4.fq' % OUT_DIR,
        '%s/MT.R2.unmapped_1_2_3_4.fq' % OUT_DIR,
        '%s/MT.SE.unmapped_1_2_3_4.fq' % OUT_DIR
    shell:
        """
        TMP_FILE=$(mktemp --tmpdir={TMPDIR} -t "alignment_XXXXXX.bam")
        BUFFER=$(mktemp --tmpdir={TMPDIR} -t "alignment_buffer_XXXXXX.bam")
        bwa mem -v 1 -t {THREADS} {input[3]} {input[0]} {input[1]} | samtools view -@ {THREADS} -bS - > $TMP_FILE
        samtools merge -@ {THREADS} -u - \
        <(samtools view -@ {THREADS} -u  -f 4 -F 264 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 8 -F 260 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 12 -F 256 $TMP_FILE) | \
        samtools view -@ {THREADS} -bF 0x800 -  | samtools sort -o -@ {THREADS} -m {MEMCORE}G -n - $BUFFER | \
        bamToFastq -i stdin -fq {output[0]} -fq2 {output[1]}
        bwa mem -v 1 -t {THREADS} {input[3]} {input[2]} | \
        samtools view -@ {THREADS} -bS - | samtools view -@ {THREADS} -uf 4 - | \
        bamToFastq -i stdin -fq {output[2]}
        rm -rf $BUFFER* $TMP_FILE
        """

### Fifth assembly ###
rule ASSEMBLY_5:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/ASSEMBLY_5.json" % OUT_DIR
    input:
        '%s/MT.R1.unmapped_1_2_3_4.fq' % OUT_DIR,
        '%s/MT.R2.unmapped_1_2_3_4.fq' % OUT_DIR,
        '%s/MT.SE.unmapped_1_2_3_4.fq' % OUT_DIR
    output:
        '%s/MT.assembly_5.fa' % OUT_DIR
    shell:
        """
        TMPD=$(mktemp -d -t --tmpdir={TMPDIR} "XXXXXX") 
        
        MAX_MEM="$(({MEMTOTAL} * 1000000000))"

        megahit -1 {input[0]} \
        -2 {input[1]} \
        -r {input[2]} \
        -o $TMPD \
        --k-min {config[idba_ud][mink]} \
        --k-max {config[idba_ud][maxk]} \
        --k-step {config[idba_ud][step]} \
        --no-bubble \
        -t {THREADS} --cpu-only \
        -m ${{MAX_MEM}} \
        --mem-flag 1 >> {log} 2>&1
        cp $TMPD/final.contigs.fa MT_contigs_1.fa
        """

rule CONCATENATE_1_2_3_4_5:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/CONCATENATE_1_2_3_4_5.json" % OUT_DIR
    input:
        '%s/MT.assembly_cat_1_2_3_4.fa' % OUT_DIR,
        '%s/MT.assembly_5.fa' % OUT_DIR
    output:
        '%s/MT.assembly_cat_1_2_3_4_5.fa' % OUT_DIR
    shell:
        """
        cat {input} > {output}
        """

rule EXTRACT_UNMAPPED_1_2_3_4_5:
    log:
        OUT_DIR
    benchmark:
        "%s/benchmarks/EXTRACT_UNMAPPED_1_2_3_4_5.json" % OUT_DIR
    input:
        'data/MT.R1.preprocessed.fq',
        'data/MT.R2.preprocessed.fq',
        'data/MT.SE.preprocessed.fq',
        '%s/MT.assembly_cat_1_2_3_4_5.fa' % OUT_DIR
    output:
        '%s/MT.R1.unmapped_1_2_3_4_5.fq' % OUT_DIR,
        '%s/MT.R2.unmapped_1_2_3_4_5.fq' % OUT_DIR,
        '%s/MT.SE.unmapped_1_2_3_4_5.fq' % OUT_DIR
    shell:
        """
        TMP_FILE=$(mktemp --tmpdir={TMPDIR} -t "alignment_XXXXXX.bam")
        BUFFER=$(mktemp --tmpdir={TMPDIR} -t "alignment_buffer_XXXXXX.bam")
        bwa mem -v 1 -t {THREADS} {input[3]} {input[0]} {input[1]} | samtools view -@ {THREADS} -bS - > $TMP_FILE
        samtools merge -@ {THREADS} -u - \
        <(samtools view -@ {THREADS} -u  -f 4 -F 264 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 8 -F 260 $TMP_FILE) \
        <(samtools view -@ {THREADS} -u -f 12 -F 256 $TMP_FILE) | \
        samtools view -@ {THREADS} -bF 0x800 -  | samtools sort -o -@ {THREADS} -m {MEMCORE}G -n - $BUFFER | \
        bamToFastq -i stdin -fq {output[0]} -fq2 {output[1]}
        bwa mem -v 1 -t {THREADS} {input[3]} {input[2]} | \
        samtools view -@ {THREADS} -bS - | samtools view -@ {THREADS} -uf 4 - | \
        bamToFastq -i stdin -fq {output[2]}
        rm -rf $BUFFER* $TMP_FILE
        """

